二进制日志(binlog),记录了MySQL所有修改数据库的操作，然后以二进制的形式
记录日志在日志文件中，开启后性能损耗约在1%

二进制日志的开启
	默认情况下二进制日志功能是没有开启的
	在配置文件my.cnf 或者my.ini文件中添加或修改
	server-id = 1	//因为BUG必须添加server-id,数值随意指定
	log_bin=mysql-bin

查看二进制日志信息	
	show global variables like '%log_bin%'
	
二进制日志的作用
	1.以二进制形式记录更改数据库的SQL语句
	2.用于MySQL主从复制
	3.增量数据备份及恢复
	
查看所有二进制文件信息
	show binary logs;

查看最新二进制文件
	show master status;

刷新日志
	flush logs;
	
查看二进制日志信息
	语法格式：SHOW BINLOG EVENTS[IN 'log_name'] [FROM pos] [LIMIT [offset,] row_count]
	例:show binlog events in 'mysql-bin.000001';
	
命令行查看
	mysqlbinlog D:\phpstudy\PHPTutorial\MySQL\data\mysql-bin.00000

显示两个时间点之间的日志	
	mysqlbinlog mysql_bin.000001 --start-datetime='2018/04/11 15:00:45' --stop-datetime='2018/04/11 15:01:35'
	
mysqlbinlog常见的选项有以下几个：
	--start-datetime：从二进制日志中读取指定等于时间戳或者晚于本地服务器的时间
	--stop-datetime：从二进制日志中读取指定小于时间戳或者等于本地服务器的时间 取值和上述一样
	--start-position：从二进制日志中读取指定position 事件位置作为开始。
	--stop-position：从二进制日志中读取指定position 事件位置作为事件截至
	
恢复binlog-file二进制日志文件：
	mysqlbinlog --no-defaults binlog-file | mysql -uroot -p123456

从某一(367)点开始恢复：
	mysqlbinlog --no-defaults --stop-position="367" mysql-bin.000001| mysql -uroot -p123456 test


	